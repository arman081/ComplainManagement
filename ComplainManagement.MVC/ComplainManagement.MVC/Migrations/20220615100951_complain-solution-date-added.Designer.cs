// <auto-generated />
using System;
using ComplainManagement.MVC.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComplainManagement.MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220615100951_complain-solution-date-added")]
    partial class complainsolutiondateadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComplainManagement.MVC.Models.ComplainAndSolution", b =>
                {
                    b.Property<int>("ComplainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ComplainDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComplainDetails")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplainNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ComplainStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComplainTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Solution")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SolutionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ComplainId");

                    b.HasIndex("ComplainTypeId");

                    b.ToTable("ComplainAndSolutions");
                });

            modelBuilder.Entity("ComplainManagement.MVC.Models.ComplainEntryVm", b =>
                {
                    b.Property<int>("ComplainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplainDetails")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplainTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ComplainId");

                    b.HasIndex("ComplainTypeId");

                    b.ToTable("ComplainEntryVm");
                });

            modelBuilder.Entity("ComplainManagement.MVC.Models.ComplainType", b =>
                {
                    b.Property<int>("ComplainTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplainTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ComplainTypeId");

                    b.ToTable("ComplainTypes");

                    b.HasData(
                        new
                        {
                            ComplainTypeId = 1,
                            ComplainTypeName = "Network"
                        },
                        new
                        {
                            ComplainTypeId = 2,
                            ComplainTypeName = "Billing"
                        },
                        new
                        {
                            ComplainTypeId = 3,
                            ComplainTypeName = "Call Drop"
                        },
                        new
                        {
                            ComplainTypeId = 4,
                            ComplainTypeName = "Internet"
                        });
                });

            modelBuilder.Entity("ComplainManagement.MVC.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ComplainManagement.MVC.Models.ComplainAndSolution", b =>
                {
                    b.HasOne("ComplainManagement.MVC.Models.ComplainType", "ComplainType")
                        .WithMany()
                        .HasForeignKey("ComplainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplainType");
                });

            modelBuilder.Entity("ComplainManagement.MVC.Models.ComplainEntryVm", b =>
                {
                    b.HasOne("ComplainManagement.MVC.Models.ComplainType", "ComplainType")
                        .WithMany()
                        .HasForeignKey("ComplainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplainType");
                });
#pragma warning restore 612, 618
        }
    }
}
